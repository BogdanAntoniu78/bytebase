---
# Source: bytebase/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-bytebase
  namespace: default
  labels:
    helm.sh/chart: bytebase-1.0.0
    app.kubernetes.io/name: bytebase
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: bytebase
    app.kubernetes.io/instance: release-name
---
# Source: bytebase/templates/statefulset.yaml
####apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-bytebase
  namespace: default
  labels:
    helm.sh/chart: bytebase-1.0.0
    app.kubernetes.io/name: bytebase
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bytebase
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bytebase
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: bytebase
      securityContext:
        {}
      containers:
        - name: bytebase
          securityContext:
            {}
          image: "bytebase/bytebase:4.2.0"
          imagePullPolicy: IfNotPresent
          args:
            [
              "--data",
              "/var/opt/bytebase",
              "--port",
              "8080",
              "--external-url",
              # helm parser cannot handle the dash in the value, so we need to quote it, so we use $external_url instead of $external-url.
              "https://www.bytebase.com/docs/get-started/install/external-url",
              "--pg",
              "postgresql://user:secret@host:port/dbname",
            ]
          volumeMounts:
            - mountPath: /var/opt/bytebase
              name: bytebase
          ports:
            - containerPort: 8080
              name: web
              protocol: TCP
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 
                  key: password
          readinessProbe:
            httpGet:
              path: /api/actuator/info
              port: web
            initialDelaySeconds: 2
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 300
            periodSeconds: 300
            timeoutSeconds: 60
          resources:
            {}
      volumes:
      - name: bytebase
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: release-name-bytebase
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
